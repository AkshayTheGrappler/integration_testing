name: Flutter CI

on:
  push:
    branches:
      - 'release*'


jobs:
  ndk_setup:
    name: Android NDK setup
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          add-to-path: false
      - run: ./build.sh
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

  build_apk:
    name: Build Android app
    needs: [ndk_setup]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.2.1'
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Generate APK
        run: flutter build apk --debug
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: android-apk
          path: build/app/outputs/apk/debug/app-debug.apk
#  test:
#    name: Unit Tests
#    runs-on: ubuntu-18.04
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#      - name: Run Unit tests
#        run: bash ./gradlew test --stacktrace

#  sonar:
#    name: SonarCloud Scan
#    runs-on: ubuntu-18.04
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: SonarCloud Scan
#        run: bash ./gradlew jacocoUnitTestReport sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }} --stacktrace
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      - name: Link to SonarCloud Report
#        run: echo "https://sonarcloud.io/dashboard?id=wkrzywiec_WaWa-Tabor"

#  apk:
#    name: Generate APK
#    runs-on: ubuntu-18.04
#
#    steps:
#      - uses: actions/checkout@v1
#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#
#      - name: Assemble app debug APK
#        run: flutter build apk --debug
#      - name: Upload app APK
#        uses: actions/upload-artifact@v1
#        with:
#          name: app-debug
#          path: app/build/outputs/apk/debug/app-debug.apk

#      - name: Assemble Android Instrumentation Tests
#        run: bash ./gradlew assembleDebugAndroidTest
#      - name: Upload Android Test APK
#        uses: actions/upload-artifact@v1
#        with:
#          name: app-debug-androidTest
#          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
#
#
#  firebase:
#    name: Run UI tests with Firebase Test Lab
#    needs: apk
#    runs-on: ubuntu-18.04
#
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Download app APK
#        uses: actions/download-artifact@v1
#        with:
#          name: app-debug
#
#      - name: Download Android test APK
#        uses: actions/download-artifact@v1
#        with:
#          name: app-debug-androidTest
#
#      - name: Login to Google Cloud
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
#        with:
#          version: '270.0.0'
#          service_account_key: ${{ secrets.GCLOUD_AUTH }}
#
#      - name: Set current project
#        run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}
#
#      - name: Run Instrumentation Tests in Firebase Test Lab
#        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=Pixel2,version=28,locale=pl,orientation=portrait
